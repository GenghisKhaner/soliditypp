name: Build Release

on:
  push:
    branches:
      - "main"

env:
  BUILD_TYPE: Release


jobs:
  create_release:
    name: "Create Release"
    runs-on: "ubuntu-latest"
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
      - name: Create release
        id: create_release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build"

  build_emscripten:
    name: Build for Emscripten
    needs: create_release
    runs-on: ubuntu-latest

    steps:
      - name: Remove unused software to free up space
        run: |
          # These are quick to delete and large enough to make a difference
          rm -rf /usr/share/swift/                         # 1.3 GB in 80 subdirs
          rm -rf /usr/local/lib/android/sdk/build-tools/   # 2.1 GB in 450 subdirs
          rm -rf /usr/share/dotnet/shared/                 # 5.3 GB in 350 subdirs
          rm -rf /usr/local/lib/android/sdk/ndk/           # 7.6 GB in 1500 subdirs

      - uses: actions/checkout@v2

      - name: Update Submodule
        run: git submodule update --init --recursive

      - name: Build
        run: bash ${{github.workspace}}/scripts/build_emscripten.sh

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_name: soljson.js
          asset_path: ${{github.workspace}}/upload/soljson.js
          asset_content_type: application/octet-stream

  build_linux:
    name: Build for Linux
    needs: create_release
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Update Submodule
        run: git submodule update --init --recursive

      - name: Install Dependencies
        run: bash ${{github.workspace}}/scripts/install_deps.sh

      - name: Build
        run: bash ${{github.workspace}}/build.sh

      - name: Compress Artifact
        run: |
          cd ${{github.workspace}}/build/solppc
          tar -cvzf solppc_linux.tar.gz ./solppc

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_name: solppc_linux.tar.gz
          asset_path: ${{github.workspace}}/build/solppc/solppc_linux.tar.gz
          asset_content_type: application/octet-stream

  build-macos:
    name: Build for MacOS
    needs: create_release
    runs-on: macos-11

    steps:
      - uses: actions/checkout@v2

      - name: Update Submodule
        run: git submodule update --init --recursive

      - name: Install Dependencies
        run: |
          bash ${{github.workspace}}/scripts/osx_install_dependencies.sh

      - name: Build
        run: |
          mkdir -p build/
          echo -n > prerelease.txt
          cd build/
          cmake .. -DSOLC_LINK_STATIC=1 -DCMAKE_BUILD_TYPE=Release
          make -j3

      - name: Compress Artifact
        run: |
          cd ${{github.workspace}}/build/solppc
          tar -cvzf solppc_darwin.tar.gz ./solppc

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_name: solppc_darwin.tar.gz
          asset_path: ${{github.workspace}}/build/solppc/solppc_darwin.tar.gz
          asset_content_type: application/octet-stream





    
                    

      
